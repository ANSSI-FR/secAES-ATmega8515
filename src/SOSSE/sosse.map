Membre d'archive inclu pour satisfaire la référence par fichier (symbole)

/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8515.o (exit)
/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                              SOSSE/sw.o (__do_clear_bss)
/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_prologue.o)
                              SOSSE/sw.o (__prologue_saves__)
/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_epilogue.o)
                              SOSSE/sw.o (__epilogue_restores__)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libatmega8515.a(eerd_byte.o)
                              SOSSE/hal.o (eeprom_read_byte)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libatmega8515.a(eewr_byte.o)
                              SOSSE/hal.o (eeprom_write_byte)

Allocation des symboles communs
Symbole commun      taille            fichier

t_permShiftRows     0x10              Version2/commands.o
response            0x8               Version2/commands.o
resplen             0x1               Version2/commands.o
input               0x10              Version2/commands.o
mask                0x12              Version2/commands.o
permIndicesBis      0x10              Version2/commands.o
keyState            0x10              Version2/commands.o
direction           0x1               SOSSE/io.o
masksState          0x10              Version2/commands.o
permIndices         0x10              Version2/commands.o
sw                  0x2               SOSSE/sw.o
header              0x5               SOSSE/t0.o
secret              0x10              Version2/commands.o
permIndicesSR       0x10              Version2/commands.o
maskedSbox          0x100             Version2/commands.o

Configuration mémoire

Nom              Origine            Longueur           Attributs
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Script de l'éditeurs de liens and table de projection mémoire

LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8515.o
LOAD SOSSE/log.o
LOAD SOSSE/sw.o
LOAD SOSSE/t0.o
LOAD SOSSE/tools.o
LOAD SOSSE/hal.o
LOAD SOSSE/io.o
LOAD Version2/main.o
LOAD Version2/commands.o
LOAD Version2/maskedAES128enc.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libatmega8515.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x175c
 *(.vectors)
 .vectors       0x0000000000000000       0x22 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8515.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x0000000000000022       0xa2 Version2/main.o
                0x00000000000000c4                . = ALIGN (0x2)
                0x00000000000000c4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000c4        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000c4                __trampolines_end = .
 *(.progmem*)
                0x00000000000000c4                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000c4                __ctors_start = .
 *(.ctors)
                0x00000000000000c4                __ctors_end = .
                0x00000000000000c4                __dtors_start = .
 *(.dtors)
                0x00000000000000c4                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000c4        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8515.o
                0x00000000000000c4                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000c4        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8515.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000d0       0x10 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                0x00000000000000d0                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000e0        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8515.o
 *(.init9)
 *(.text)
 .text          0x00000000000000e4        0x2 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8515.o
                0x00000000000000e4                __vector_1
                0x00000000000000e4                __vector_12
                0x00000000000000e4                __bad_interrupt
                0x00000000000000e4                __vector_6
                0x00000000000000e4                __vector_3
                0x00000000000000e4                __vector_11
                0x00000000000000e4                __vector_13
                0x00000000000000e4                __vector_7
                0x00000000000000e4                __vector_5
                0x00000000000000e4                __vector_4
                0x00000000000000e4                __vector_9
                0x00000000000000e4                __vector_2
                0x00000000000000e4                __vector_15
                0x00000000000000e4                __vector_8
                0x00000000000000e4                __vector_14
                0x00000000000000e4                __vector_10
                0x00000000000000e4                __vector_16
 .text          0x00000000000000e6        0x0 SOSSE/log.o
 .text          0x00000000000000e6       0x20 SOSSE/sw.o
                0x00000000000000e6                sw_set
 .text          0x0000000000000106      0x120 SOSSE/t0.o
                0x0000000000000106                t0_sendAck
                0x000000000000011a                t0_sendCAck
                0x0000000000000130                t0_sendSw
                0x0000000000000158                t0_sendWord
                0x000000000000017c                t0_recBlock
                0x00000000000001bc                t0_testP1P2
                0x00000000000001fe                t0_testP3
 .text          0x0000000000000226       0x50 SOSSE/tools.o
                0x0000000000000226                hton_us
 .text          0x0000000000000276      0x172 SOSSE/hal.o
                0x0000000000000276                hal_init
                0x00000000000002d8                hal_eeprom_read
                0x0000000000000342                hal_eeprom_write
                0x00000000000003b0                hal_io_sendByteT0
                0x00000000000003c8                hal_io_recByteT0
                0x00000000000003d8                hal_rnd_addEntropy
 .text          0x00000000000003e8      0x110 SOSSE/io.o
                0x00000000000003f0                delay1etu
                0x00000000000003f4                recbytet0
                0x000000000000047e                sendbytet0
 .text          0x00000000000004f8      0x100 Version2/main.o
                0x00000000000004f8                main
 .text          0x00000000000005f8      0x470 Version2/commands.o
                0x00000000000005f8                cmd_write
                0x000000000000066c                cmd_read
                0x00000000000006f2                cmd_set_key
                0x0000000000000754                cmd_get_key
                0x00000000000007b8                cmd_set_input
                0x000000000000081a                cmd_get_input
                0x000000000000087e                cmd_set_mask
                0x00000000000008e0                cmd_get_mask
                0x0000000000000944                cmd_aes128_enc
                0x0000000000000978                cmd_get_output
                0x00000000000009dc                cmd_getResponse
 .text          0x0000000000000a68      0xc58 Version2/maskedAES128enc.o
                0x00000000000015c6                asm_maskedAES128enc
 .text          0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text          0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text          0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_prologue.o)
 .text          0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_epilogue.o)
 .text          0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libatmega8515.a(eerd_byte.o)
 .text          0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libatmega8515.a(eewr_byte.o)
                0x00000000000016c0                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc.mul
                0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_prologue.o)
 .text.libgcc.div
                0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_prologue.o)
 .text.libgcc   0x00000000000016c0        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_prologue.o)
 .text.libgcc.prologue
                0x00000000000016c0       0x38 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_prologue.o)
                0x00000000000016c0                __prologue_saves__
 .text.libgcc.builtins
                0x00000000000016f8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_prologue.o)
 .text.libgcc.fmul
                0x00000000000016f8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_prologue.o)
 .text.libgcc.fixed
                0x00000000000016f8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_prologue.o)
 .text.libgcc.mul
                0x00000000000016f8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_epilogue.o)
 .text.libgcc.div
                0x00000000000016f8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_epilogue.o)
 .text.libgcc   0x00000000000016f8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_epilogue.o)
 .text.libgcc.prologue
                0x00000000000016f8       0x36 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_epilogue.o)
                0x00000000000016f8                __epilogue_restores__
 .text.libgcc.builtins
                0x000000000000172e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_epilogue.o)
 .text.libgcc.fmul
                0x000000000000172e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_epilogue.o)
 .text.libgcc.fixed
                0x000000000000172e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_epilogue.o)
 .text.avr-libc
                0x000000000000172e       0x10 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libatmega8515.a(eerd_byte.o)
                0x000000000000172e                eeprom_read_byte
 .text.avr-libc
                0x000000000000173e       0x1a /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libatmega8515.a(eewr_byte.o)
                0x000000000000173e                eeprom_write_byte
                0x0000000000001740                eeprom_write_r18
                0x0000000000001758                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000001758        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                0x0000000000001758                exit
                0x0000000000001758                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000001758        0x4 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000175c                _etext = .

.data           0x0000000000800060        0x0 address de chargement 0x000000000000175c
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8515.o
 .data          0x0000000000800060        0x0 SOSSE/log.o
 .data          0x0000000000800060        0x0 SOSSE/sw.o
 .data          0x0000000000800060        0x0 SOSSE/t0.o
 .data          0x0000000000800060        0x0 SOSSE/tools.o
 .data          0x0000000000800060        0x0 SOSSE/hal.o
 .data          0x0000000000800060        0x0 SOSSE/io.o
 .data          0x0000000000800060        0x0 Version2/main.o
 .data          0x0000000000800060        0x0 Version2/commands.o
 .data          0x0000000000800060        0x0 Version2/maskedAES128enc.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_prologue.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_epilogue.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libatmega8515.a(eerd_byte.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libatmega8515.a(eewr_byte.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                0x0000000000800060                PROVIDE (__data_end, .)

.bss            0x0000000000800060      0x1a3
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8515.o
 .bss           0x0000000000800060        0x0 SOSSE/log.o
 .bss           0x0000000000800060        0x0 SOSSE/sw.o
 .bss           0x0000000000800060        0x0 SOSSE/t0.o
 .bss           0x0000000000800060        0x0 SOSSE/tools.o
 .bss           0x0000000000800060        0x0 SOSSE/hal.o
 .bss           0x0000000000800060        0x0 SOSSE/io.o
 .bss           0x0000000000800060        0x0 Version2/main.o
 .bss           0x0000000000800060        0x0 Version2/commands.o
 .bss           0x0000000000800060        0x0 Version2/maskedAES128enc.o
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_prologue.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_epilogue.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libatmega8515.a(eerd_byte.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libatmega8515.a(eewr_byte.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800060        0x2 SOSSE/sw.o
                0x0000000000800060                sw
 COMMON         0x0000000000800062        0x5 SOSSE/t0.o
                0x0000000000800062                header
 COMMON         0x0000000000800067        0x1 SOSSE/io.o
                0x0000000000800067                direction
 COMMON         0x0000000000800068      0x19b Version2/commands.o
                0x0000000000800068                t_permShiftRows
                0x0000000000800078                response
                0x0000000000800080                resplen
                0x0000000000800081                input
                0x0000000000800091                mask
                0x00000000008000a3                permIndicesBis
                0x00000000008000b3                keyState
                0x00000000008000c3                masksState
                0x00000000008000d3                permIndices
                0x00000000008000e3                secret
                0x00000000008000f3                permIndicesSR
                0x0000000000800103                maskedSbox
                0x0000000000800203                PROVIDE (__bss_end, .)
                0x000000000000175c                __data_load_start = LOADADDR (.data)
                0x000000000000175c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800203        0x0
                0x0000000000800203                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800203                PROVIDE (__noinit_end, .)
                0x0000000000800203                _end = .
                0x0000000000800203                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 SOSSE/log.o
                                         0x12 (taille avant relaxe)
 .comment       0x0000000000000011       0x12 SOSSE/sw.o
 .comment       0x0000000000000011       0x12 SOSSE/t0.o
 .comment       0x0000000000000011       0x12 SOSSE/tools.o
 .comment       0x0000000000000011       0x12 SOSSE/hal.o
 .comment       0x0000000000000011       0x12 Version2/main.o
 .comment       0x0000000000000011       0x12 Version2/commands.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8515.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(build/aesv2 elf32-avr)
LOAD linker stubs
